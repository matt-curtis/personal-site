---
import { getImage } from 'astro:assets';

import CSSSVGVariable from './css-svg-variable.astro';

import ULLIDots from './assets/ul-li-dots.svg.astro';
import UnderlineSVG from './assets/underline.svg.astro';
import { BunchOfOtherStuff } from './assets/bunch-of-other-stuff.svg.tsx';
import VisitLinkPatternSVG from './assets/visit-link-pattern.svg.astro';

import { LineBoilFilter } from './line-boil-filter';

import { StarkIcon } from './articles/stark.svg.tsx';
import { HyphenIcon } from './articles/hyphen.svg.tsx';
import { ZemelIcon } from './articles/zemel.svg.tsx';
import { UnsleptIcon } from './articles/unslept.svg.tsx';
import { FluidIcon } from './articles/fluid.svg.tsx';

import Header from './header.astro';
import * as InlineSVGTextWave from './inline-svg-text/waving/constants.ts';
import * as DrawnText from './drawn-text.tsx';
import { AstroAdaptedArticle as Article } from './article/index.tsx';

import * as StarkArticle from './articles/stark.md';
import * as FluidArticle from './articles/fluid.md';
import * as HyphenArticle from './articles/hyphen.md';
import * as UnsleptArticle from './articles/unslept.md';
import * as ZemelArticle from './articles/zemel.md';

import './style.css';

import starkThumb from './assets/site-thumbs/stark.png';
import fluidThumb from './assets/site-thumbs/fluid.png';
import hyphenThumb from './assets/site-thumbs/hyphen.png';
import unsleptThumb from './assets/site-thumbs/unslept.png';
import zemelThumb from './assets/site-thumbs/zemel.png';
import Footer from './footer.astro';
import GoogleAnalytics from './google-analytics.astro';

const optimizedStarkThumb = await getImage({ src: starkThumb, format: 'webp', width: 400 });
const optimizedFluidThumb = await getImage({ src: fluidThumb, format: 'webp', width: 400 });
const optimizedHyphenThumb = await getImage({ src: hyphenThumb, format: 'webp', width: 400 });
const optimizedUnsleptThumb = await getImage({ src: unsleptThumb, format: 'webp', width: 400 });
const optimizedZemelThumb = await getImage({ src: zemelThumb, format: 'webp', width: 400 });
---

<html lang="en">
    <head>
        <GoogleAnalytics />
        
        <meta charset="utf-8" />
        
        <title>Matt Curtis</title>

        <meta name="description" content="The personal site of Matt Curtis" />

        <meta property="og:title" content="Matt Curtis" />
        <meta property="og:description" content="The personal site of Matt Curtis" />
        <meta property="og:image" content="/og/general.jpg" />
        <meta property="og:image:alt" content="The words 'Matt Curtis' in white and pink gradient against a black background, surrounded by pink scribbled shapes and words." />
        
        <meta name="twitter:creator" content="@mattxcurtis" />
        <meta name="twitter:image" content="/og/twitter.jpg" />

        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        
        <CSSSVGVariable name="ul-li-dot">
            <ULLIDots alt={false} color="#FF079C" />
        </CSSSVGVariable>

        <CSSSVGVariable name="ul-li-dot-alt">
            <ULLIDots alt={true} color="#FF079C" />
        </CSSSVGVariable>

        <CSSSVGVariable name="underline-image">
            <UnderlineSVG color="#FF079C" />
        </CSSSVGVariable>

        <CSSSVGVariable name="visit-link-pattern-image">
            <VisitLinkPatternSVG />
        </CSSSVGVariable>

        <script src="./inline-svg-text/waving/mount.ts"></script>
    </head>

    <body>
        <svg style="position: absolute; width: 0; height: 0;" aria-hidden="true">
            <LineBoilFilter id="line-boil-filter" />
        </svg>

        <Header />

        <p class="lede" {...InlineSVGTextWave.trigger}>
            <DrawnText.Hi client:load /> I'm Matt. I design and build <DrawnText.Fun client:load />, personable, and purposeful software.
        </p>

        <p>I've been making things on the internet in some capacity since I was 11 and my parents made their first (big) mistake of leaving me unsupervised near a keyboard and mouse. Eventually I realized they weren't connected to anything, but that's beside the point.</p>
    
        <p>Here's a few of the things I've worked on in the past:</p>

        <!-- Stark -->

        <Article
            client:load
            tldr={StarkArticle.frontmatter.tldr}
            visitLink={{ name: 'getstark.co', href: 'https://getstark.co', thumbSrc: optimizedStarkThumb.src }}
        >
            <Fragment slot="icon"><StarkIcon /></Fragment>
            <Fragment slot="summary"><DrawnText.Stark client:load />, where I designed and built <span class="underline">accessibility software</span> used by NASA, Google, </Fragment>
            <Fragment slot="summaryBreak">and Microsoft</Fragment>
            <Fragment slot="content"><StarkArticle.Content /></Fragment>
        </Article>

        <!-- Unslept -->

        <Article
            client:load
            tldr={UnsleptArticle.frontmatter.tldr}
            visitLink={{ name: 'unslept.co', href: 'https://unslept.co', thumbSrc: optimizedUnsleptThumb.src }}
        >
            <Fragment slot="icon"><UnsleptIcon /></Fragment>
            <Fragment slot="summary"><DrawnText.Unslept client:load />, a <span class="underline">music community project</span> for discovering slept-on </Fragment>
            <Fragment slot="summaryBreak">Metalcore</Fragment>
            <Fragment slot="content">
                <UnsleptArticle.Content />
            </Fragment>
        </Article>

        <!-- Fluid -->

        <Article
            client:load
            tldr={FluidArticle.frontmatter.tldr}
            visitLink={{ name: 'Fluid on producthunt.com', href: 'https://www.producthunt.com/products/fluid-for-sketch?launch=fluid-for-sketch-2', thumbSrc: optimizedFluidThumb.src }}
        >
            <Fragment slot="icon"><FluidIcon /></Fragment>
            <Fragment slot="summary"><DrawnText.Fluid client:load />, the first plugin to add </Fragment>
            <Fragment slot="summaryBreak"><span class="underline">autolayout to Sketch</span></Fragment>
            <Fragment slot="content">
                <FluidArticle.Content />
            </Fragment>
        </Article>

        <!-- Hyphen -->

        <Article
            client:load
            visitLink={{ name: 'hyphenreader.com', href: 'https://hyphenreader.com', thumbSrc: optimizedHyphenThumb.src }}
            tldr={HyphenArticle.frontmatter.tldr}
        >
            <Fragment slot="icon"><HyphenIcon /></Fragment>
            <Fragment slot="summary"><DrawnText.Hyphen client:load />, a customizable <span class="underline">reading app</span>&nbsp;</Fragment>
            <Fragment slot="summaryBreak">for iPhone & iPad</Fragment>
            <Fragment slot="content">
                <HyphenArticle.Content />
            </Fragment>
        </Article>

        <!-- Zemel -->

        <Article
            client:load
            tldr={ZemelArticle.frontmatter.tldr}
            visitLink={{ name: 'Zemel on github.com', href: 'https://github.com/matt-curtis/zemel', thumbSrc: optimizedZemelThumb.src }}
        >
            <Fragment slot="icon"><ZemelIcon /></Fragment>
            <Fragment slot="summary"><DrawnText.Zemel client:load />, a library that lets Swift apps <span class="underline">parse XML &nbsp;</span></Fragment>
            <Fragment slot="summaryBreak">(like, real fast)</Fragment>
            <Fragment slot="content">
                <ZemelArticle.Content />
            </Fragment>
        </Article>

        <BunchOfOtherStuff color="#FF079C" />

        <p>Working on something interesting, or just want to talk? Get in touch:</p>

        <ul>
            <li>You can <a href="mailto:matt.curtis.biz@gmail.com">reach me via email</a>,</li>
            <li>or find me huffing the digital equivalent of glue over on <a href="https://twitter.com/mattxcurtis">twitter.</a></li>
        </ul>

        <Footer />
    </body>
</html>